//Функция IsVowel возвращает 1 (истина), если проверяемый символ letter
//является гласной буквой русского алфавита и 0 (ложь) в противном
//случае
////////////////////////////////////////////////////////////////////
bool IsVowel(char letter){
  char l = tolower(letter);//приводим символ к нижнему регистру А->а
  char a[] = "аоэиуыеёюя";//10
  for(int i=0;i<strlen(a);i++)//по очереди проверяем
    if(a[i] == l) return true;//является ли символ l одним из a[i]
  return false;
}
//------------------------------------------------------------------
//Функция IsConsonant возвращает 1 (истина), если проверяемый символ letter
//является согласной буквой русского алфавита и 0 (ложь) в противном
//случае
////////////////////////////////////////////////////////////////////
bool IsConsonant(char letter){
  char l = tolower(letter);//приводим символ к нижнему регистру А->а
  char a[] = "бвгдйжзклмнпрстфхцчшщ";//21
  for(int i=0;i<strlen(a);i++)
    if(a[i] == l) return true;
  return false;
}
//------------------------------------------------------------------
//Функция IsLetter возвращает 1 (истина), если проверяемый символ letter
//является буквой русского алфавита и 0 (ложь) в противном
//случае
////////////////////////////////////////////////////////////////////
bool IsLetter(char letter){
  char l = tolower(letter);//приводим символ к нижнему регистру А->а
  char a[] = "абвгдеёжзийклмнопрстуфхцчшщыъьэюя";//33
  for(int i=0;i<strlen(a);i++)
    if(a[i] == l) return true;
  return false;
}
//------------------------------------------------------------------
//Функция ContainVowel возвращает 1 (истина), если в строке str
//есть гласная буква русского алфавита и 0 (ложь) в противном
//случае
////////////////////////////////////////////////////////////////////
bool ContainVowel(char *str){
  for(int k=0;k<strlen(str);k++)
    if(IsVowel(str[k])) return true;
  return false;
}
//------------------------------------------------------------------
//Функция InsertDash вставляет тире в позицию pos строки str
////////////////////////////////////////////////////////////////////
void InsertDash(char *str,int pos){
  int n = strlen(str);
  for(int i=n+1;i>pos;i--)
    str[i] = str[i-1];
  str[pos] = '-';
}
//------------------------------------------------------------------
//Функция SubString возвращает фрагмент строки начиная с символа
//в позиции pos и длиной len
////////////////////////////////////////////////////////////////////
char* SubString(char* str, char* buf, int pos, int len){
  int n = strlen(str), i, j = 0, a = len + pos;
  memset(buf,'\0',SUBL);//заполняем буфер нулями

  if(len == 0 || a > n) a = n;//контроль выхода за границы

  for(i=pos;i<a;i++,j++)//копируем элементы в подстроку
    buf[j] = str[i];

  return buf;
}